[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 pipelineR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). pipelineR: Fetches stock market data Yahoo Finance populates PostgreSQL database. R package version 0.0.1.0000.","code":"@Manual{,   title = {pipelineR: Fetches stock market data from Yahoo Finance and populates a PostgreSQL database},   author = {First Last},   year = {2025},   note = {R package version 0.0.1.0000}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"pipelineR R package designed fetch stock market data Yahoo Finance populate PostgreSQL database. provides complete pipeline retrieving S&P 500 stock data, transforming tidy format, maintaining logs operations.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"can install development version pipelineR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ericofrs/pipelineR\")"},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"Connect PostgreSQL database Fetch S&P 500 ticker symbols Query stock data Yahoo Finance Format data tidy structure Batch processing large symbol lists Insert non-duplicate data records Comprehensive pipeline logging Progress tracking long-running operations","code":""},{"path":"/index.html","id":"required-environment-variables","dir":"","previous_headings":"","what":"Required Environment Variables","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"package requires following environment variables set: PG_DB: PostgreSQL database name PG_HOST: PostgreSQL host address PG_USER: PostgreSQL username PG_PASSWORD: PostgreSQL password","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"","code":"library(pipelineR)  # Run the complete pipeline with default settings start_pipeline()  # Or run individual steps:  # Connect to the database con <- connect_db()  # Fetch ticker symbols symbols <- fetch_symbols(con)  # Get stock data for specific tickers data <- yahoo_query_data(   c(\"AAPL\", \"MSFT\", \"GOOGL\"),   .start = \"2025-03-15\",   .end = \"2025-04-15\" )  # Format the data tidy_data <- format_data(data)  # Insert data into the database insert_new_data(tidy_data, con)  # Don't forget to disconnect DBI::dbDisconnect(con)"},{"path":"/index.html","id":"data-structure","dir":"","previous_headings":"","what":"Data Structure","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"package works following database schema: <schema>.info: Contains S&P 500 symbols <schema>.sp500_data: Contains stock market data columns: symbol date metric value <schema>.pipeline_logs: Contains logs columns: user_login batch_id symbol status n_rows message","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Fetches stock market data from Yahoo Finance and populates a PostgreSQL database","text":"project licensed MIT License - see LICENSE file details.","code":""},{"path":"/reference/build_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table with pipeline_logs structure — build_summary_table","title":"Create table with pipeline_logs structure — build_summary_table","text":"Create table pipeline_logs structure","code":""},{"path":"/reference/build_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with pipeline_logs structure — build_summary_table","text":"","code":"build_summary_table()"},{"path":"/reference/build_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create table with pipeline_logs structure — build_summary_table","text":"tibble columns user_login, batch_id, symbol, status, n_rows, message","code":""},{"path":"/reference/build_summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create table with pipeline_logs structure — build_summary_table","text":"","code":"if (FALSE) { # \\dontrun{ empty_logs <- build_summary_table() } # }"},{"path":"/reference/connect_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the PostgreSQL Database — connect_db","title":"Connect to the PostgreSQL Database — connect_db","text":"Establishes connection PostgreSQL database using credentials host information stored environment variables. function used internally functions need interact ADEM database.","code":""},{"path":"/reference/connect_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the PostgreSQL Database — connect_db","text":"","code":"connect_db()"},{"path":"/reference/connect_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the PostgreSQL Database — connect_db","text":"DBI connection object (class \"PqConnection\")","code":""},{"path":"/reference/connect_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to the PostgreSQL Database — connect_db","text":"Environment variables expected: PG_DB: database name PG_HOST: database host PG_USER: database username PG_PASSWORD: database password","code":""},{"path":"/reference/connect_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to the PostgreSQL Database — connect_db","text":"","code":"if (FALSE) { # \\dontrun{ con <- connect_db() DBI::dbListTables(con) DBI::dbDisconnect(con) } # }"},{"path":"/reference/fetch_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch tickers — fetch_symbols","title":"Fetch tickers — fetch_symbols","text":"Fetches tickers main SP500 table.","code":""},{"path":"/reference/fetch_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch tickers — fetch_symbols","text":"","code":"fetch_symbols(con)"},{"path":"/reference/fetch_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch tickers — fetch_symbols","text":"con connection","code":""},{"path":"/reference/fetch_symbols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch tickers — fetch_symbols","text":"data.frame one column symbols","code":""},{"path":"/reference/fetch_symbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch tickers — fetch_symbols","text":"","code":"if (FALSE) { # \\dontrun{ fetch_symbols() } # }"},{"path":"/reference/format_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the data — format_data","title":"Format the data — format_data","text":"Format data","code":""},{"path":"/reference/format_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the data — format_data","text":"","code":"format_data(.data)"},{"path":"/reference/format_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the data — format_data","text":".data untidy tibble containing stock data","code":""},{"path":"/reference/format_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the data — format_data","text":"tidy tibble columns symbol, date, metric value","code":""},{"path":"/reference/format_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the data — format_data","text":"","code":"if (FALSE) { # \\dontrun{ format_data(untidy_data) } # }"},{"path":"/reference/insert_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert new data into the PostgreSQL table — insert_new_data","title":"Insert new data into the PostgreSQL table — insert_new_data","text":"Insert new data PostgreSQL table","code":""},{"path":"/reference/insert_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert new data into the PostgreSQL table — insert_new_data","text":"","code":"insert_new_data(.tidy_data, con)"},{"path":"/reference/insert_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert new data into the PostgreSQL table — insert_new_data","text":".tidy_data tidy tibble containing stock market data con connection","code":""},{"path":"/reference/insert_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert new data into the PostgreSQL table — insert_new_data","text":"message confirming insertion records","code":""},{"path":"/reference/insert_new_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert new data into the PostgreSQL table — insert_new_data","text":"","code":"if (FALSE) { # \\dontrun{ message <- insert_new_data() } # }"},{"path":"/reference/log_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Log summary — log_summary","title":"Log summary — log_summary","text":"Log summary","code":""},{"path":"/reference/log_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log summary — log_summary","text":"","code":"log_summary(   .user_login = \"EriF\",   .start,   .end,   .n_stocks_per_batch,   .symbols,   .message )"},{"path":"/reference/log_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log summary — log_summary","text":".user_login Optional. String containing username .start Optional. Date starting date .end Optional. Date last day .n_stocks_per_batch Optional. Integer number ticker per batch .symbols Vector tickers .message String message prompted insert_new_data","code":""},{"path":"/reference/log_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log summary — log_summary","text":"tibble log","code":""},{"path":"/reference/log_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log summary — log_summary","text":"","code":"if (FALSE) { # \\dontrun{ pipeline_logs <- log_summary(.symbols = symbols_vector, .message = message) } # }"},{"path":"/reference/push_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Push summary table to the DB — push_summary_table","title":"Push summary table to the DB — push_summary_table","text":"Push summary table DB","code":""},{"path":"/reference/push_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push summary table to the DB — push_summary_table","text":"","code":"push_summary_table(.summary_table, con)"},{"path":"/reference/push_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push summary table to the DB — push_summary_table","text":".summary_table tibble uploaded database con connection","code":""},{"path":"/reference/push_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push summary table to the DB — push_summary_table","text":"message","code":""},{"path":"/reference/push_summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Push summary table to the DB — push_summary_table","text":"","code":"if (FALSE) { # \\dontrun{ push_summary_table(.summary_table = pipelog_table) } # }"},{"path":"/reference/split_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Split vector into determined number of batches — split_batch","title":"Split vector into determined number of batches — split_batch","text":"Returns list containing multiple vectors (n_groups). splits lenght vectors fair possible.","code":""},{"path":"/reference/split_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split vector into determined number of batches — split_batch","text":"","code":"split_batch(.vec, n_groups)"},{"path":"/reference/split_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split vector into determined number of batches — split_batch","text":".vec vector n_groups number desired batches","code":""},{"path":"/reference/split_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split vector into determined number of batches — split_batch","text":"list vectors","code":""},{"path":"/reference/split_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split vector into determined number of batches — split_batch","text":"","code":"if (FALSE) { # \\dontrun{ a <- 1:467 split_batch(a, n_groups=15) } # }"},{"path":"/reference/split_batch_maxn.html","id":null,"dir":"Reference","previous_headings":"","what":"Split vector into batches with maximum size — split_batch_maxn","title":"Split vector into batches with maximum size — split_batch_maxn","text":"Split vector batches maximum size","code":""},{"path":"/reference/split_batch_maxn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split vector into batches with maximum size — split_batch_maxn","text":"","code":"split_batch_maxn(.vec, max_content)"},{"path":"/reference/split_batch_maxn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split vector into batches with maximum size — split_batch_maxn","text":".vec vector max_content maximum lenght batch","code":""},{"path":"/reference/split_batch_maxn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split vector into batches with maximum size — split_batch_maxn","text":"list vectors","code":""},{"path":"/reference/split_batch_maxn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split vector into batches with maximum size — split_batch_maxn","text":"","code":"if (FALSE) { # \\dontrun{ a <- 1:467 split_batch(a, max_content=40) } # }"},{"path":"/reference/start_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Start pipeline — start_pipeline","title":"Start pipeline — start_pipeline","text":"Start pipeline","code":""},{"path":"/reference/start_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start pipeline — start_pipeline","text":"","code":"start_pipeline(.from = Sys.Date() - 7, .to = Sys.Date(), .batch_size = 31)"},{"path":"/reference/start_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start pipeline — start_pipeline","text":".Optional. Start date .Optional. End date .batch_size Optional. Number tickers per batch","code":""},{"path":"/reference/start_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start pipeline — start_pipeline","text":"Undefined","code":""},{"path":"/reference/start_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start pipeline — start_pipeline","text":"","code":"if (FALSE) { # \\dontrun{ start_pipeline() } # }"},{"path":"/reference/yahoo_query_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Query data from Yahoo finance — yahoo_query_data","title":"Query data from Yahoo finance — yahoo_query_data","text":"Query data Yahoo finance","code":""},{"path":"/reference/yahoo_query_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query data from Yahoo finance — yahoo_query_data","text":"","code":"yahoo_query_data(.vec, .n_stocks_per_batch, .start, .end)"},{"path":"/reference/yahoo_query_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query data from Yahoo finance — yahoo_query_data","text":".vec vector tickers .n_stocks_per_batch integer sets maximum number tickers per batch .start date \"YYYY-MM-DD\" beginning data extraction .end date \"YYYY-MM-DD\" end data extraction","code":""},{"path":"/reference/yahoo_query_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query data from Yahoo finance — yahoo_query_data","text":"table containing stock data","code":""},{"path":"/reference/yahoo_query_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query data from Yahoo finance — yahoo_query_data","text":"","code":"if (FALSE) { # \\dontrun{ tickers <- c(\"A\", \"AAPL\", \"ABBV\") yahoo_query_data(tickers, .n_stocks_per_batch = 1, .start = \"2025-01-15\") } # }"}]
